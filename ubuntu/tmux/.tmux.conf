# $Id: screen-keys.conf,v 1.7 2010-07-31 11:39:13 nicm Exp $
#
# By Nicholas Marriott. Public domain.
#
# This configuration file binds many of the common GNU screen key bindings to
# appropriate tmux key bindings. Note that for some key bindings there is no
# tmux analogue and also that this set omits binding some commands available in
# tmux but not in screen.
#
# Note this is only a selection of key bindings and they are in addition to the
# normal tmux key bindings. This is intended as an example not as to be used
# as-is.

# show all option list
# tmux show-options -g

# use UTF8
set -g utf8
set-window-option -g utf8 on

# make tmux display things in 256 colors
# some key binding <M-Up>, <M-Down> don't work. check in vim insert mode by Ctrl-V <M-Up>
#set -g default-terminal "screen-256color"
set -g default-terminal "xterm"
# Mapping meta key within tmux in vim to works, such as <M-Up>, <M-Down>.
set -g xterm-keys on

# ESC key causes a small delay in terminal/vim, set it to zero.
set -s escape-time 0

# set scrollback history to 10000 (10k)
set -g history-limit 10000

# ----------------------
# Status Bar
# -----------------------
set-option -g status on                # turn the status bar on
set -g status-utf8 on                  # set utf-8 for the status bar
set -g status-interval 5               # set update frequencey (default 15 seconds)
#set -g status-justify centre           # center window list for clarity
#set-option -g status-position top      # position the status bar at top of screen

# visual notification of activity in other windows
#setw -g monitor-activity on
#set -g visual-activity on

# set color for status bar
set-option -g status-bg black 
set-option -g status-fg yellow 
set-option -g status-attr dim 

# set window list colors - red for active and cyan for inactive
set-window-option -g window-status-fg brightwhite
set-window-option -g window-status-bg black
set-window-option -g window-status-attr dim

set-window-option -g window-status-current-fg brightgreen
set-window-option -g window-status-current-bg black
set-window-option -g window-status-current-attr bright

# show host name and IP address on left side of status bar
#set -g status-left-length 70
#set -g status-left "#[fg=green]: #h : #[fg=brightblue]#(curl icanhazip.com) #[fg=yellow]#(ifconfig en0 | grep 'inet ' | awk '{print \"en0 \" $2}') #(ifconfig en1 | grep 'inet ' | awk '{print \"en1 \" $2}') #[fg=red]#(ifconfig tun0 | grep 'inet ' | awk '{print \"vpn \" $2}') "
set -g status-right-length 20
# #T: Current pane title, Hour:Minute day-month-year
#set -g status-right "[#T] %H:%M %d-%b-%y"
set -g status-right "%H:%M %d-%b-%y"

#===============================================================================
# bind key
#===============================================================================
# use PREFIX | to split window horizontally and PREFIX - to split vertically
bind | split-window -h
bind - split-window -v

# Set the prefix to ^A.
unbind C-b
set -g prefix ^A
bind a send-prefix

# Bind appropriate commands similar to screen.
# lockscreen ^X x 
unbind ^X
bind ^X lock-server
unbind x
bind x lock-server

# screen ^C c 
unbind ^C
bind ^C new-window
unbind c
bind c new-window

# detach ^D d
unbind ^D
bind ^D detach

# displays * 
unbind *
bind * list-clients

# next ^@ ^N sp n 
unbind ^@
bind ^@ next-window
unbind ^N
bind ^N next-window
unbind " "
bind " " next-window
unbind n
bind n next-window

# title A
unbind A
bind A command-prompt "rename-window %%"

# other ^A
unbind ^A
bind ^A last-window

# prev ^H ^P p ^? 
unbind ^H
bind ^H previous-window
unbind ^P
bind ^P previous-window
unbind p
bind p previous-window
unbind BSpace
bind BSpace previous-window

# windows ^W w 
unbind ^W
bind ^W list-windows
unbind w
bind w list-windows

# quit \ 
unbind '\'
bind '\' confirm-before "kill-server"

# kill K k 
unbind K
bind K confirm-before "kill-window"
unbind k
bind k confirm-before "kill-window"

# redisplay ^L l 
unbind ^L
bind ^L refresh-client
unbind l
bind l refresh-client

# :kB: focus up
unbind Tab
bind Tab select-pane -t:.+
unbind BTab
bind BTab select-pane -t:.-

# " windowlist -b
unbind '"'
bind '"' choose-window

# vi style key bindings on then the following applies:
# 
# 1) enter copy mode using Control+b [
# 2) navigate to beginning of text, you want to select and hit Space
# 3) move around using arrow keys to select region
# 4) when you reach end of region simply hit Enter to copy the region
# 5) now Control+b ] will paste the selection

# vi-like copy/paste mode
#setw -g mode-keys vi
#unbind [
#bind Escape copy-mode
#unbind p
#bind p paste-buffer
#bind-key -t vi-copy 'v' begin-selection
#bind-key -t vi-copy 'y' copy-selection
